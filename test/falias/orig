PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE FunctionAlias (
	fileID integer references chFile (id),
	mfp text, -- syntax pattern: structname::mfp
	funDecl text,
	offset integer
);
INSERT INTO "FunctionAlias" VALUES(1,'::u_mem','foo',238);
INSERT INTO "FunctionAlias" VALUES(1,'abc::mem','foo',398);
INSERT INTO "FunctionAlias" VALUES(1,'abc::ff','foo',398);
INSERT INTO "FunctionAlias" VALUES(1,'def::eme','oof',398);
INSERT INTO "FunctionAlias" VALUES(1,'ghi::mem','foo',728);
INSERT INTO "FunctionAlias" VALUES(1,'def::eme','foo',728);
INSERT INTO "FunctionAlias" VALUES(1,'abc::mem','foo_expr',1015);
INSERT INTO "FunctionAlias" VALUES(1,'abc::ff','foo_expr',1116);
INSERT INTO "FunctionAlias" VALUES(1,'def::eme','oof_expr',1134);
CREATE INDEX Alias on FunctionAlias (mfp);
CREATE INDEX Alias2 on FunctionAlias (funDecl);
COMMIT;
PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE Definition (
	id integer primary key autoincrement,
	fileID integer references chFile (id),
	name text,
	flag integer,
	fileOffset integer
);
INSERT INTO "Definition" VALUES(1,1,'F',4,15);
INSERT INTO "Definition" VALUES(2,1,'FF',4,39);
INSERT INTO "Definition" VALUES(3,1,'control',1,63);
INSERT INTO "Definition" VALUES(4,1,'f',1,78);
INSERT INTO "Definition" VALUES(5,1,'foo',2,86);
INSERT INTO "Definition" VALUES(6,1,'oof',2,104);
INSERT INTO "Definition" VALUES(7,1,'ofo',2,122);
INSERT INTO "Definition" VALUES(8,1,'foo_expr',2,140);
INSERT INTO "Definition" VALUES(9,1,'oof_expr',2,163);
INSERT INTO "Definition" VALUES(10,1,'ofo_expr',2,186);
INSERT INTO "Definition" VALUES(11,1,'u',1,234);
INSERT INTO "Definition" VALUES(12,1,'def',5,266);
INSERT INTO "Definition" VALUES(13,1,'abc',5,291);
INSERT INTO "Definition" VALUES(14,1,'x',1,394);
INSERT INTO "Definition" VALUES(15,1,'jump',1,679);
INSERT INTO "Definition" VALUES(16,1,'ghi',5,693);
INSERT INTO "Definition" VALUES(17,1,'y',1,724);
INSERT INTO "Definition" VALUES(18,1,'main',2,751);
CREATE INDEX DefName on Definition (name);
CREATE TRIGGER DelDefinition after delete on Definition
begin
	delete from FunctionCall where callerID = old.id;
	delete from Offsetof where structID = old.id;
	delete from FunctionAccess where funcID = old.id;
	delete from FunctionPattern where funcID = old.id;
end;
COMMIT;
PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE FunctionCall (
	callerID integer references Definition (id),
	fileID integer references chFile (id), -- note, a function body can be across multiple files, so we need the field too.
	name text, -- if name is like `XX::YY', that is, include '::', it's mfp call, otherwise, function call.
	fileOffset integer
);
INSERT INTO "FunctionCall" VALUES(18,1,'abc::mem',805);
INSERT INTO "FunctionCall" VALUES(18,1,'abc::mem',822);
INSERT INTO "FunctionCall" VALUES(18,1,'abc::mem',838);
INSERT INTO "FunctionCall" VALUES(18,1,'def::eme',856);
INSERT INTO "FunctionCall" VALUES(18,1,'def::eme',876);
INSERT INTO "FunctionCall" VALUES(18,1,'def::eme',890);
INSERT INTO "FunctionCall" VALUES(18,1,'def::eme',906);
CREATE INDEX CalleeName on FunctionCall (name);
COMMIT;
