PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE FunpAlias (
	fileID integer references chFile (id),
	structName text,
	member text,
	funDecl text,
	offset integer
);
INSERT INTO "FunpAlias" VALUES(1,'','u_mem','foo',238);
INSERT INTO "FunpAlias" VALUES(1,'abc','mem','foo',398);
INSERT INTO "FunpAlias" VALUES(1,'abc','ff','foo',398);
INSERT INTO "FunpAlias" VALUES(1,'def','eme','oof',398);
INSERT INTO "FunpAlias" VALUES(1,'ghi','mem','foo',728);
INSERT INTO "FunpAlias" VALUES(1,'def','eme','foo',728);
INSERT INTO "FunpAlias" VALUES(1,'abc','mem','foo_expr',1015);
INSERT INTO "FunpAlias" VALUES(1,'abc','ff','foo_expr',1116);
INSERT INTO "FunpAlias" VALUES(1,'def','eme','oof_expr',1134);
CREATE INDEX Alias on FunpAlias (member, funDecl);
COMMIT;
PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE Definition (
	id integer primary key autoincrement,
	name text,
	flag integer,
	fileoffset integer
);
INSERT INTO "Definition" VALUES(1,'F',4,15);
INSERT INTO "Definition" VALUES(2,'FF',4,39);
INSERT INTO "Definition" VALUES(3,'control',1,63);
INSERT INTO "Definition" VALUES(4,'f',1,78);
INSERT INTO "Definition" VALUES(5,'foo',2,86);
INSERT INTO "Definition" VALUES(6,'oof',2,104);
INSERT INTO "Definition" VALUES(7,'ofo',2,122);
INSERT INTO "Definition" VALUES(8,'foo_expr',2,140);
INSERT INTO "Definition" VALUES(9,'oof_expr',2,163);
INSERT INTO "Definition" VALUES(10,'ofo_expr',2,186);
INSERT INTO "Definition" VALUES(11,'u',1,234);
INSERT INTO "Definition" VALUES(12,'def',5,266);
INSERT INTO "Definition" VALUES(13,'abc',5,291);
INSERT INTO "Definition" VALUES(14,'x',1,394);
INSERT INTO "Definition" VALUES(15,'jump',1,679);
INSERT INTO "Definition" VALUES(16,'ghi',5,693);
INSERT INTO "Definition" VALUES(17,'y',1,724);
INSERT INTO "Definition" VALUES(18,'main',2,751);
INSERT INTO "Definition" VALUES(19,'abc::mem',10,805);
INSERT INTO "Definition" VALUES(20,'abc::mem',10,822);
INSERT INTO "Definition" VALUES(21,'abc::mem',10,838);
INSERT INTO "Definition" VALUES(22,'def::eme',10,856);
INSERT INTO "Definition" VALUES(23,'def::eme',10,876);
INSERT INTO "Definition" VALUES(24,'def::eme',10,890);
INSERT INTO "Definition" VALUES(25,'def::eme',10,906);
CREATE INDEX DefName on Definition (name);
CREATE TRIGGER DelDefinition after delete on Definition
begin
	delete from FunctionRelationship where caller = old.id;
	delete from Offsetof where structID = old.id;
end;
COMMIT;
